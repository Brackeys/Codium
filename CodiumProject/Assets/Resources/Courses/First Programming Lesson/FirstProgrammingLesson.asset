%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 0d42b67239d81468f87c34b4ca1c2b4a, type: 3}
  m_Name: FirstProgrammingLesson
  m_EditorClassIdentifier: 
  title: First Programming Lesson
  author: "Asbj\xF8rn Thirslund"
  description: This course teaches how to write basic code in C# while teaching fundamental
    programming concepts.
  category: 2
  difficulty: 0
  courseViews:
  - subject: Basic Math
    explaination: 'C# has the power to do amazing things.


      Let''s start by making the computer do some simple math.'
    codeBulletPoints:
    - You can add (<b>+</b>), subtract (<b>-</b>), divide (<b>/</b>) and multiply
      (<b>*</b>) using C#.
    - Simply type in the expression you want to calculate.
    - 
    exampleBulletPoints:
    - <code>2 + 2</code>
    - <code>4 * 5 + 1</code>
    - 
    goal: Calculate something.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: 2+3
    ID: e22c6c2eafd348ea88a7fa9bbddd34bd
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: e7d152b824e74674a9f494625a910440, type: 3}
    gameScene: {fileID: 0}
  - subject: Decimal Numbers
    explaination: 'If we try to calculate <b>1/2</b> we will get the result <b>0</b>.


      That''s because we are currently using whole numbers resulting in <b>0.5</b>
      being rounded down to <b>0</b>.


      To fix this we add an <b>f</b> at the end of the division.'
    codeBulletPoints:
    - 
    - 
    - 
    exampleBulletPoints:
    - <code>1 / 2f = 0.5</code>
    - <code>4 / 5f = 0.8</code>
    - 
    goal: Calculate a decimal point number.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: 3/2f
    ID: d1ceac4024334c4d80dd33fcef0d7df5
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: bd8a2b600ce73634bb84f9e6850caca5, type: 3}
    gameScene: {fileID: 0}
  - subject: Strings
    explaination: 'Text in C# is called a string. A string begins and ends with a
      quote ( <b>"</b> ).


      We can do a bunch of stuff with a string, let''s start by getting its length.'
    codeBulletPoints:
    - We can create a string by typing some text wrapped in quotes ( <b>"</b> ).
    - Adding .Length to the end of the string gets the number of characters in the
      string.
    - 
    exampleBulletPoints:
    - 'String are often used for names: <code>"Dwayne Johnson"</code> is a string.'
    - <code>"Dwayne Johnson".Length</code> prints the length of the string.
    - 
    goal: Print the length of your name.
    instructionBulletPoints:
    - Write your name in quotes.
    - Add .Length to the end of your name (after the quotes).
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: '"Morpheus".Length'
    ID: 6776e5498822400bbed9f14201898565
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: 54eb7d80a0a2346408341365be4d1fc4, type: 3}
    gameScene: {fileID: 0}
  - subject: '"Hello, World"'
    explaination: 'It''s common among programmers to start any project with the words:
      <code>"Hello, World"</code>.


      Let''s do it with style by combining two strings.'
    codeBulletPoints:
    - To add strings together we simply use the <b>+</b> operator.
    - 
    - 
    exampleBulletPoints:
    - <code>"I am " + "Groot"</code> will show the words <b>I am Groot</b>.
    - 
    - 
    goal: Say hi like a programmer by combining the two words.
    instructionBulletPoints:
    - Create a string called <code>"Hello,  "</code> (remember the space to seperate
      the words).
    - Combine it with another string called <code>"World"</code> using the <b>+</b>
      sign.
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: '"Hello, " + "World"'
    ID: 41885bd597904a8c8579b43e178aa25e
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: 3388d8184e17eb442ad39dd282649237, type: 3}
    gameScene: {fileID: 0}
  - subject: Questions?
    explaination: 'The computer can do more than combine strings: It can compare values.


      Let''s ask the computer some questions!

'
    codeBulletPoints:
    - To check if two values are equal we use the <code>==</code> operator.
    - The <code>!=</code> operator does exactly the opposite.
    - 
    exampleBulletPoints:
    - <code>5 == 5</code> will show the result <b>True</b>.
    - <code>"BIG" == "big"</code> will show <b>False</b>.
    - <code>25/5 != 4</code> will show <b>True</b>.
    goal: Find out if six multiplied (<b>*</b>) by nine is equal to <b>42</b>.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: 6*9 == 42
    ID: 727b3abd39224757b4d2c65f2a31741c
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: 1ed7f0be80f008d44bc3e1e8eba36ff1, type: 3}
    gameScene: {fileID: 0}
  - subject: Printing to the Console
    explaination: 'So far the computer has shown the result of our code in the console.


      In real programming we have to ask the computer to do this.


      To display a value at a certain point, we use this command:


      <code>Console.Print( value here );</code>'
    codeBulletPoints:
    - 
    - 
    - 
    exampleBulletPoints:
    - <code>Console.Print( 2+5 );</code>
    - <code>Console.Print("David Hasselhoff");</code>
    - 
    goal: Print your name. Then print your age on a new line.
    instructionBulletPoints:
    - Use the print command on line 2 to output your name as a string.
    - Do the same on line 4 but this time give it your age.
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: '// Print your name below:

      CARET

      // Print your age below:

'
    solutionCode: '// Print your name below:

      Console.Print("Elvis Presley");

      // Print your age below:

      Console.Print(80);'
    ID: dd4e36fb00e64ed2817e6ffd06d806b2
    ceSettings:
      executionMode: 1
      usingNamespaces: using CodiumAPI;
    validator: {fileID: 11500000, guid: 40d32436a9eb03b42bd594f7fe3b0b25, type: 3}
    gameScene: {fileID: 0}
  - subject: Comments
    explaination: "As we saw just before, commenting parts of our code makes it easier
      to read.\n\r\nComments are ignored by the computer when it is running the program.\r"
    codeBulletPoints:
    - Use  <code>// TEXT HERE</code>  to make a single-line comment.
    - Use  <code>/* TEXT HERE */</code> to make a multi-line comment.
    - 
    exampleBulletPoints:
    - <code>"Yoda".Length  //get length of string</code>
    - <code>/* This comment will continue until the end sign */</code>
    - 
    goal: Make a comment that explains the code without altering it.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 'CARET

      Console.Print ("I am your father".Length + 2);'
    solutionCode: '// Print the length of the string plus two

      Console.Print ("I am your father".Length + 2);'
    ID: fb307f51e52642a780ee7eac20377349
    ceSettings:
      executionMode: 1
      usingNamespaces: using CodiumAPI;
    validator: {fileID: 11500000, guid: 8d42a990abd129a4fb1673b5f9e3f908, type: 3}
    gameScene: {fileID: 0}
  - subject: Data Types
    explaination: "Whoah, that sounds scary!\r\n\r\nDon't worry, we've been using
      Data Types all along.\r\n\r\nThese are the four most basic ones:\r\n\nAn <b>integer</b>
      is a whole number.\r\nA   <b>float</b>  is a decimal number.\r\nA   <b>string</b>
      \ is a sequence of characters.\r\nA   <b>boolean</b>  is either <b>true</b>
      or <b>false</b>\r"
    codeBulletPoints:
    - 
    - 
    - 
    exampleBulletPoints:
    - 
    - 
    - 
    goal: Change the name of the Data Types in the Console.Print statements to match
      their values.
    instructionBulletPoints:
    - 'On the first line, replace <code>"Boolean: "</code> with <code>"Integer: "</code>'
    - 'On the third line, replace <code>"Integer: "</code> with <code>"Boolean: "</code>'
    - 'Swap <code>"Float: "</code> with <code>"String: "</code>'
    - 
    - 
    - 
    - 
    - 
    defaultCode: 'Console.Print ("CARETBoolean: " + 14);

      Console.Print ("Float: " + "Hello, World");

      Console.Print ("Integer: " + false);

      Console.Print ("String: " + 0.6f);'
    solutionCode: 'Console.Print ("Integer: " + 14);

      Console.Print ("String: " + "Hello, World");

      Console.Print ("Boolean: " + false);

      Console.Print ("Float: " + 0.6f);'
    ID: d5d49c93f0514c4ba8de2eec0a10e156
    ceSettings:
      executionMode: 1
      usingNamespaces: using CodiumAPI;
    validator: {fileID: 11500000, guid: a5f0d2d5cbd4c8f4a9a6b6a7fd10fd80, type: 3}
    gameScene: {fileID: 0}
  - subject: Empty
    explaination: Ignore this
    codeBulletPoints:
    - To access properties in a GameObject we use the '<b>.</b>'' operator.
    - Sometimes you have to use the '<b>.</b>'' multiple times to access the property
      you want.
    - 
    exampleBulletPoints:
    - Cube.transform.position accesses the position of our Cube.
    - Cube.renderer.material accesses the way the object looks.
    - 
    goal: Change the color of the Cube to your liking.
    instructionBulletPoints:
    - Access the Cubes color property under Cube.renderer.material.
    - Set the color property equal to Color.red.
    - (Optional) Try the same with blue, green and yellow.
    - 
    - 
    - 
    - 
    - 
    defaultCode: "using CodiumAPI;\r\n\r\npublic class TestClass : ICodiumBase {\r\n\tpublic
      void Main () {\r\n\t\tstring hello = \"Hello, World\";\r\n\t\tConsole.Print
      (hello);\r\n\r\n\t\tAnimal anim = new Animal();\r\n\t\tanim.age += 1;\r\n\t\tanim.Print();\r\n\r\n\t\tfor
      (int i = 0; i < 5; i++) {\r\n\t\t\tConsole.Print (i);\r\n\t\t}\r\n\t}\r\n}\r\n\r\npublic
      class Animal {\r\n\tpublic string name = \"Cat\";\r\n\tpublic int age = 10;\r\n\r\n\tpublic
      void Print () {\r\n\t\tConsole.Print (\"Name: \" + name + \" and age: \" + age);\r\n\t}\r\n}"
    solutionCode: "GameObject Cube = GameObject.Find(\"Cube\");\t//Find the Cube GameObject
      & name it 'Cube'\n\nCube.renderer.material.color = Color.red;"
    ID: 5f62a7f95ba3459eb7b61bf073bf975e
    ceSettings:
      executionMode: 0
      usingNamespaces: 
    validator: {fileID: 11500000, guid: eeb98b44be8d4ee48af7edbb4663530f, type: 3}
    gameScene: {fileID: 0}
  ID: d30c8c1df3b2427ab0c46891b7cbb514
