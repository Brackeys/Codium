%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 0d42b67239d81468f87c34b4ca1c2b4a, type: 3}
  m_Name: FirstProgrammingLesson
  m_EditorClassIdentifier: 
  title: First Programming Lesson
  author: "Asbj\xF8rn Thirslund"
  description: This course teaches how to write basic code in C# while teaching fundamental
    programming concepts.
  category: 2
  difficulty: 0
  courseViews:
  - subject: Basic Math
    explaination: 'C# has the power to do amazing things.


      Let''s start by making the computer do some simple math.'
    codeBulletPoints:
    - You can add (<b>+</b>), subtract (<b>-</b>), divide (<b>/</b>) and multiply
      (<b>*</b>) using C#.
    - Simply type in the expression you want to calculate.
    - 
    exampleBulletPoints:
    - <b>2 + 2</b>
    - <b>4 * 5 + 1</b>
    - 
    goal: Calculate something.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: 2+3
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: e7d152b824e74674a9f494625a910440, type: 3}
    gameScene: {fileID: 0}
  - subject: Decimal Numbers
    explaination: 'If we try to calculate <b>1/2</b> we will get the result <b>0</b>.


      That''s because we are currently using whole numbers resulting in <b>0.5</b>
      being rounded down to <b>0</b>.


      To fix this we add an <b>f</b> at the end of the division.'
    codeBulletPoints:
    - 
    - 
    - 
    exampleBulletPoints:
    - <b>1 / 2f = 0.5</b>
    - <b>4 / 5f = 0.8</b>
    - 
    goal: Calculate a decimal point number.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: 3/2f
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: bd8a2b600ce73634bb84f9e6850caca5, type: 3}
    gameScene: {fileID: 0}
  - subject: Strings
    explaination: 'Text in C# is called a string. A string begins and ends with a
      quote ( <b>"</b> ).


      We can do a bunch of stuff with a string, let''s start by getting its length.'
    codeBulletPoints:
    - We can create a string by typing some text wrapped in quotes ( <b>"</b> ).
    - Adding .Length to the end of the string gets the number of characters in the
      string.
    - 
    exampleBulletPoints:
    - 'String are often used for names: "Dwayne Johnson" is a string.'
    - '"Dwayne Johnson".Length prints the length of the string.'
    - 
    goal: Print the length of your name.
    instructionBulletPoints:
    - Write your name in quotes.
    - Add .Length to the end of your name (after the quotes).
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: '"Morpheus".Length'
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: 54eb7d80a0a2346408341365be4d1fc4, type: 3}
    gameScene: {fileID: 0}
  - subject: '"Hello, World"'
    explaination: 'It''s common among programmers to start any project with the words:
      "Hello, World".


      Let''s do it with style by combining two strings.'
    codeBulletPoints:
    - To add strings together we simply use the <b>+</b> operator.
    - 
    - 
    exampleBulletPoints:
    - '"I am " + "Groot" will show the words <b>I am Groot</b>.'
    - 
    - 
    goal: Say hi like a programmer by combining the two words.
    instructionBulletPoints:
    - Create a string called <b>"Hello,  "</b> (remember the space to seperate the
      words).
    - Combine it with another string called <b>"World"</b> using the <b>+</b> sign.
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: '"Hello, " + "World"'
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 11500000, guid: 3388d8184e17eb442ad39dd282649237, type: 3}
    gameScene: {fileID: 0}
  - subject: Questions?
    explaination: 'The computer can do more than combine strings: It can compare values.


      Let''s ask the computer some questions!

'
    codeBulletPoints:
    - To check if two values are equal we use the <b>==</b> operator.
    - The <b>!=</b> operator does exactly the opposite.
    - 
    exampleBulletPoints:
    - <b>5 == 5</b> will show the result <b>True</b>.
    - <b>"BIG" == "big"</b> will show <b>False</b>.
    - <b>25/5 != 4</b> will show <b>True</b>.
    goal: Find out if six multiplied by nine is equal to <b>42</b>.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: 
    solutionCode: 6*9 == 42
    ceSettings:
      executionMode: 1
      usingNamespaces: using CodiumAPI
    validator: {fileID: 11500000, guid: 1ed7f0be80f008d44bc3e1e8eba36ff1, type: 3}
    gameScene: {fileID: 0}
  - subject: Comments
    explaination: "Commenting parts of our code makes it easier to read.\n\r\nComments
      will be ignored by the computer when it is running the program.\r"
    codeBulletPoints:
    - Use  <b>// TEXT HERE</b>  to make a single-line comment.
    - Use  <b>/* TEXT HERE */</b>  to make a multi-line comment.
    - 
    exampleBulletPoints:
    - "\u201CYoda\u201D.Length     // get length of string"
    - /* This comment will continue until the end sign */
    - 
    goal: Make a comment that explains the code without altering it.
    instructionBulletPoints:
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    - 
    defaultCode: '"I am your father".Length + 2'
    solutionCode: "\"I am your father\".Length + 2\t// get the length of the string
      and add 2"
    ceSettings:
      executionMode: 2
      usingNamespaces: using CodiumAPI;
    validator: {fileID: 11500000, guid: 8d42a990abd129a4fb1673b5f9e3f908, type: 3}
    gameScene: {fileID: 0}
  - subject: Empty
    explaination: Ignore this
    codeBulletPoints:
    - To access properties in a GameObject we use the '<b>.</b>'' operator.
    - Sometimes you have to use the '<b>.</b>'' multiple times to access the property
      you want.
    - 
    exampleBulletPoints:
    - Cube.transform.position accesses the position of our Cube.
    - Cube.renderer.material accesses the way the object looks.
    - 
    goal: Change the color of the Cube to your liking.
    instructionBulletPoints:
    - Access the Cubes color property under Cube.renderer.material.
    - Set the color property equal to Color.red.
    - (Optional) Try the same with blue, green and yellow.
    - 
    - 
    - 
    - 
    - 
    defaultCode: "GameObject Cube = GameObject.Find(\"Cube\");\t//Find the Cube GameObject
      & name it 'Cube'\n\n"
    solutionCode: "GameObject Cube = GameObject.Find(\"Cube\");\t//Find the Cube GameObject
      & name it 'Cube'\n\nCube.renderer.material.color = Color.red;"
    ceSettings:
      executionMode: 1
      usingNamespaces: 
    validator: {fileID: 0}
    gameScene: {fileID: 0}
  ID: 1c54a3ba5c0e40d68a2f7ba492758c05
